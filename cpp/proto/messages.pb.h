// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: messages.proto
// Protobuf C++ Version: 6.32.1

#ifndef messages_2eproto_2epb_2eh
#define messages_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_messages_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_messages_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_messages_2eproto;
}  // extern "C"
namespace nats_study {
class GreetRequest;
struct GreetRequestDefaultTypeInternal;
extern GreetRequestDefaultTypeInternal _GreetRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GreetRequest_class_data_;
class GreetResponse;
struct GreetResponseDefaultTypeInternal;
extern GreetResponseDefaultTypeInternal _GreetResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GreetResponse_class_data_;
class TalkMessage;
struct TalkMessageDefaultTypeInternal;
extern TalkMessageDefaultTypeInternal _TalkMessage_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TalkMessage_class_data_;
}  // namespace nats_study
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace nats_study {

// ===================================================================


// -------------------------------------------------------------------

class TalkMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:nats_study.TalkMessage) */ {
 public:
  inline TalkMessage() : TalkMessage(nullptr) {}
  ~TalkMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TalkMessage* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TalkMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TalkMessage(::google::protobuf::internal::ConstantInitialized);

  inline TalkMessage(const TalkMessage& from) : TalkMessage(nullptr, from) {}
  inline TalkMessage(TalkMessage&& from) noexcept
      : TalkMessage(nullptr, ::std::move(from)) {}
  inline TalkMessage& operator=(const TalkMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TalkMessage& operator=(TalkMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TalkMessage& default_instance() {
    return *reinterpret_cast<const TalkMessage*>(
        &_TalkMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TalkMessage& a, TalkMessage& b) { a.Swap(&b); }
  inline void Swap(TalkMessage* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TalkMessage* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TalkMessage* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TalkMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TalkMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TalkMessage& from) { TalkMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TalkMessage* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "nats_study.TalkMessage"; }

 protected:
  explicit TalkMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TalkMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TalkMessage& from);
  TalkMessage(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TalkMessage&& from) noexcept
      : TalkMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderLanguageFieldNumber = 1,
    kMessageTextFieldNumber = 2,
    kTimestampFieldNumber = 3,
  };
  // string sender_language = 1;
  void clear_sender_language() ;
  const ::std::string& sender_language() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_sender_language(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_sender_language();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_sender_language();
  void set_allocated_sender_language(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_sender_language() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_sender_language(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_sender_language();

  public:
  // string message_text = 2;
  void clear_message_text() ;
  const ::std::string& message_text() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message_text(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message_text();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message_text();
  void set_allocated_message_text(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_message_text() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message_text(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message_text();

  public:
  // int64 timestamp = 3;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:nats_study.TalkMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 58,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TalkMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr sender_language_;
    ::google::protobuf::internal::ArenaStringPtr message_text_;
    ::int64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messages_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TalkMessage_class_data_;
// -------------------------------------------------------------------

class GreetResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:nats_study.GreetResponse) */ {
 public:
  inline GreetResponse() : GreetResponse(nullptr) {}
  ~GreetResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GreetResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GreetResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GreetResponse(::google::protobuf::internal::ConstantInitialized);

  inline GreetResponse(const GreetResponse& from) : GreetResponse(nullptr, from) {}
  inline GreetResponse(GreetResponse&& from) noexcept
      : GreetResponse(nullptr, ::std::move(from)) {}
  inline GreetResponse& operator=(const GreetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GreetResponse& operator=(GreetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GreetResponse& default_instance() {
    return *reinterpret_cast<const GreetResponse*>(
        &_GreetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GreetResponse& a, GreetResponse& b) { a.Swap(&b); }
  inline void Swap(GreetResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GreetResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GreetResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GreetResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GreetResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GreetResponse& from) { GreetResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GreetResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "nats_study.GreetResponse"; }

 protected:
  explicit GreetResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GreetResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GreetResponse& from);
  GreetResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GreetResponse&& from) noexcept
      : GreetResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResponseTextFieldNumber = 1,
    kReceiverLanguageFieldNumber = 2,
  };
  // string response_text = 1;
  void clear_response_text() ;
  const ::std::string& response_text() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_response_text(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_response_text();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_response_text();
  void set_allocated_response_text(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_response_text() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_response_text(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_response_text();

  public:
  // string receiver_language = 2;
  void clear_receiver_language() ;
  const ::std::string& receiver_language() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_receiver_language(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_receiver_language();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_receiver_language();
  void set_allocated_receiver_language(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_receiver_language() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_receiver_language(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_receiver_language();

  public:
  // @@protoc_insertion_point(class_scope:nats_study.GreetResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 63,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GreetResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr response_text_;
    ::google::protobuf::internal::ArenaStringPtr receiver_language_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messages_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GreetResponse_class_data_;
// -------------------------------------------------------------------

class GreetRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:nats_study.GreetRequest) */ {
 public:
  inline GreetRequest() : GreetRequest(nullptr) {}
  ~GreetRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GreetRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GreetRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GreetRequest(::google::protobuf::internal::ConstantInitialized);

  inline GreetRequest(const GreetRequest& from) : GreetRequest(nullptr, from) {}
  inline GreetRequest(GreetRequest&& from) noexcept
      : GreetRequest(nullptr, ::std::move(from)) {}
  inline GreetRequest& operator=(const GreetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GreetRequest& operator=(GreetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GreetRequest& default_instance() {
    return *reinterpret_cast<const GreetRequest*>(
        &_GreetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GreetRequest& a, GreetRequest& b) { a.Swap(&b); }
  inline void Swap(GreetRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GreetRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GreetRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GreetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GreetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GreetRequest& from) { GreetRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GreetRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "nats_study.GreetRequest"; }

 protected:
  explicit GreetRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GreetRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GreetRequest& from);
  GreetRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GreetRequest&& from) noexcept
      : GreetRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderLanguageFieldNumber = 1,
    kGreetingTextFieldNumber = 2,
  };
  // string sender_language = 1;
  void clear_sender_language() ;
  const ::std::string& sender_language() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_sender_language(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_sender_language();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_sender_language();
  void set_allocated_sender_language(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_sender_language() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_sender_language(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_sender_language();

  public:
  // string greeting_text = 2;
  void clear_greeting_text() ;
  const ::std::string& greeting_text() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_greeting_text(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_greeting_text();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_greeting_text();
  void set_allocated_greeting_text(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_greeting_text() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_greeting_text(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_greeting_text();

  public:
  // @@protoc_insertion_point(class_scope:nats_study.GreetRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 60,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GreetRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr sender_language_;
    ::google::protobuf::internal::ArenaStringPtr greeting_text_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messages_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GreetRequest_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TalkMessage

// string sender_language = 1;
inline void TalkMessage::clear_sender_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_language_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& TalkMessage::sender_language() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:nats_study.TalkMessage.sender_language)
  return _internal_sender_language();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void TalkMessage::set_sender_language(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.sender_language_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:nats_study.TalkMessage.sender_language)
}
inline ::std::string* PROTOBUF_NONNULL TalkMessage::mutable_sender_language()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_sender_language();
  // @@protoc_insertion_point(field_mutable:nats_study.TalkMessage.sender_language)
  return _s;
}
inline const ::std::string& TalkMessage::_internal_sender_language() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_language_.Get();
}
inline void TalkMessage::_internal_set_sender_language(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.sender_language_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL TalkMessage::_internal_mutable_sender_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.sender_language_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE TalkMessage::release_sender_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:nats_study.TalkMessage.sender_language)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.sender_language_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.sender_language_.Set("", GetArena());
  }
  return released;
}
inline void TalkMessage::set_allocated_sender_language(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.sender_language_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_language_.IsDefault()) {
    _impl_.sender_language_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:nats_study.TalkMessage.sender_language)
}

// string message_text = 2;
inline void TalkMessage::clear_message_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_text_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& TalkMessage::message_text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:nats_study.TalkMessage.message_text)
  return _internal_message_text();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void TalkMessage::set_message_text(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.message_text_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:nats_study.TalkMessage.message_text)
}
inline ::std::string* PROTOBUF_NONNULL TalkMessage::mutable_message_text()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message_text();
  // @@protoc_insertion_point(field_mutable:nats_study.TalkMessage.message_text)
  return _s;
}
inline const ::std::string& TalkMessage::_internal_message_text() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_text_.Get();
}
inline void TalkMessage::_internal_set_message_text(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.message_text_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL TalkMessage::_internal_mutable_message_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.message_text_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE TalkMessage::release_message_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:nats_study.TalkMessage.message_text)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.message_text_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_text_.Set("", GetArena());
  }
  return released;
}
inline void TalkMessage::set_allocated_message_text(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.message_text_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_text_.IsDefault()) {
    _impl_.message_text_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:nats_study.TalkMessage.message_text)
}

// int64 timestamp = 3;
inline void TalkMessage::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int64_t TalkMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:nats_study.TalkMessage.timestamp)
  return _internal_timestamp();
}
inline void TalkMessage::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:nats_study.TalkMessage.timestamp)
}
inline ::int64_t TalkMessage::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void TalkMessage::_internal_set_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// -------------------------------------------------------------------

// GreetRequest

// string sender_language = 1;
inline void GreetRequest::clear_sender_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_language_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& GreetRequest::sender_language() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:nats_study.GreetRequest.sender_language)
  return _internal_sender_language();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GreetRequest::set_sender_language(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.sender_language_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:nats_study.GreetRequest.sender_language)
}
inline ::std::string* PROTOBUF_NONNULL GreetRequest::mutable_sender_language()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_sender_language();
  // @@protoc_insertion_point(field_mutable:nats_study.GreetRequest.sender_language)
  return _s;
}
inline const ::std::string& GreetRequest::_internal_sender_language() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_language_.Get();
}
inline void GreetRequest::_internal_set_sender_language(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.sender_language_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GreetRequest::_internal_mutable_sender_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.sender_language_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GreetRequest::release_sender_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:nats_study.GreetRequest.sender_language)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.sender_language_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.sender_language_.Set("", GetArena());
  }
  return released;
}
inline void GreetRequest::set_allocated_sender_language(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.sender_language_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_language_.IsDefault()) {
    _impl_.sender_language_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:nats_study.GreetRequest.sender_language)
}

// string greeting_text = 2;
inline void GreetRequest::clear_greeting_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.greeting_text_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& GreetRequest::greeting_text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:nats_study.GreetRequest.greeting_text)
  return _internal_greeting_text();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GreetRequest::set_greeting_text(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.greeting_text_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:nats_study.GreetRequest.greeting_text)
}
inline ::std::string* PROTOBUF_NONNULL GreetRequest::mutable_greeting_text()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_greeting_text();
  // @@protoc_insertion_point(field_mutable:nats_study.GreetRequest.greeting_text)
  return _s;
}
inline const ::std::string& GreetRequest::_internal_greeting_text() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.greeting_text_.Get();
}
inline void GreetRequest::_internal_set_greeting_text(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.greeting_text_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GreetRequest::_internal_mutable_greeting_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.greeting_text_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GreetRequest::release_greeting_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:nats_study.GreetRequest.greeting_text)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.greeting_text_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.greeting_text_.Set("", GetArena());
  }
  return released;
}
inline void GreetRequest::set_allocated_greeting_text(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.greeting_text_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.greeting_text_.IsDefault()) {
    _impl_.greeting_text_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:nats_study.GreetRequest.greeting_text)
}

// -------------------------------------------------------------------

// GreetResponse

// string response_text = 1;
inline void GreetResponse::clear_response_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_text_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& GreetResponse::response_text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:nats_study.GreetResponse.response_text)
  return _internal_response_text();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GreetResponse::set_response_text(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.response_text_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:nats_study.GreetResponse.response_text)
}
inline ::std::string* PROTOBUF_NONNULL GreetResponse::mutable_response_text()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_response_text();
  // @@protoc_insertion_point(field_mutable:nats_study.GreetResponse.response_text)
  return _s;
}
inline const ::std::string& GreetResponse::_internal_response_text() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.response_text_.Get();
}
inline void GreetResponse::_internal_set_response_text(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.response_text_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GreetResponse::_internal_mutable_response_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.response_text_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GreetResponse::release_response_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:nats_study.GreetResponse.response_text)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.response_text_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.response_text_.Set("", GetArena());
  }
  return released;
}
inline void GreetResponse::set_allocated_response_text(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.response_text_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.response_text_.IsDefault()) {
    _impl_.response_text_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:nats_study.GreetResponse.response_text)
}

// string receiver_language = 2;
inline void GreetResponse::clear_receiver_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.receiver_language_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& GreetResponse::receiver_language() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:nats_study.GreetResponse.receiver_language)
  return _internal_receiver_language();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GreetResponse::set_receiver_language(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.receiver_language_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:nats_study.GreetResponse.receiver_language)
}
inline ::std::string* PROTOBUF_NONNULL GreetResponse::mutable_receiver_language()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_receiver_language();
  // @@protoc_insertion_point(field_mutable:nats_study.GreetResponse.receiver_language)
  return _s;
}
inline const ::std::string& GreetResponse::_internal_receiver_language() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.receiver_language_.Get();
}
inline void GreetResponse::_internal_set_receiver_language(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.receiver_language_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GreetResponse::_internal_mutable_receiver_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.receiver_language_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GreetResponse::release_receiver_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:nats_study.GreetResponse.receiver_language)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.receiver_language_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.receiver_language_.Set("", GetArena());
  }
  return released;
}
inline void GreetResponse::set_allocated_receiver_language(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.receiver_language_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.receiver_language_.IsDefault()) {
    _impl_.receiver_language_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:nats_study.GreetResponse.receiver_language)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace nats_study


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // messages_2eproto_2epb_2eh
